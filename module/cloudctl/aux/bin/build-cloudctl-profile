#!/bin/bash

ccioGid="$(grep ccio /etc/group | cut -d ':' -f 3)"
echo ">   Staging Cloudctl Profile ..."

cat <<EOF >/tmp/lxd-profile-cloudctl.yaml
config:
  linux.kernel_modules: ip6table_filter,iptable_filter
  security.nesting: "true"
  security.privileged: "true"
  user.network-config: |
    version: 2
    ethernets:
      eth0:
        dhcp4: true
        dhcp6: false
      eth1:
        dhcp4: false
        dhcp6: false
        addresses: [ ${int_ministack_SUBNET}.3/24 ]
      eth2:
        dhcp4: false
        dhcp6: false
        addresses: [ ${ocp_ministack_SUBNET}.3/24 ]
  user.user-data: |
    #cloud-config
    package_upgrade: true
    packages:
      - jq
      - xz
      - git
      - tar
      - tree
      - sudo
      - tmux
      - htop
      - lnav
      - tftp
      - lynx
      - snapd
      - p7zip
      - iperf3
      - podman
      - skopeo
      - buildah
      - glances
      - ansible
      - hostname
      - neofetch
      - syslinux
      - net-tools
      - squashfuse
      - virt-install
      - vim-enhanced
      - openssh-server
      - libvirt-client
      - xrdp
      - libvirt
      - xorgxrdp
      - xrdp-devel
      - virt-viewer
      - virt-manager
      - xrdp-selinux
      - gnome-tweaks
    users:
      - name: ccio
        system: true
      - name: lxd
        system: true
      - name: ${ministack_UNAME}
        shell: /bin/bash
        sudo: ['ALL=(ALL) NOPASSWD:ALL']
        ssh_import_id: gh:${ccio_SSH_UNAME}
        passwd: ${ministack_PWD_SALT}
        lock_passwd: false
        groups:
          - ccio
          - wheel
          - kvm
          - libvirt
          - lxd
    write_files:
      - encoding: b64
        content: |
          $(base64 -w0 /etc/ccio/ocp-mini-stack/profile)
        owner: root:ccio
        path: /etc/ccio/ocp-mini-stack/profile
        permissions: '0755'
      - encoding: b64
        content: |
          $(base64 -w0 /root/.bashrc)
        owner: root:root
        path: /root/.bashrc
        permissions: '0744'
      - encoding: b64
        content: |
          $(base64 -w0 /root/.ssh/authorized_keys)
        owner: root:root
        path: /root/.ssh/authorized_keys
        permissions: '0600'
      - encoding: b64
        content: |
          $(base64 -w0 /root/.ssh/id_rsa)
        owner: root:root
        path: /root/.ssh/id_rsa
        permissions: '0600'
      - encoding: b64
        content: |
          $(base64 -w0 /root/.ssh/id_rsa.pub)
        owner: root:root
        path: /root/.ssh/id_rsa.pub
        permissions: '0600'
    runcmd:
      - ["ln", "-s",  "/usr/libexec/snapd", "/usr/lib/snapd"]
      - ["rpm", "--nodeps", "--allmatches", "-e", "fedora-release-container"]
      - ["systemctl", "unmask", "systemd-logind"]
      - ["systemctl", "enable", "--now", "sshd.service"]
      - ["systemctl", "enable", "--now", "systemd-logind"]
      - ["systemctl", "enable", "--now", "xrdp.service"]
      - ["systemctl", "enable", "--now", "xrdp-sesman.service"]
      - ["systemctl", "set-default", "graphical.target"]
      - ["systemctl", "enable", "--now", "libvirtd.service"]
      - ["sleep", "1"]
      - ["virsh", "net-destroy", "default"]
      - ["virsh", "net-undefine", "default"]
      - ["systemctl", "disable", "--now", "libvirtd.service"]
      - ["systemctl", "mask", "libvirtd.service"]
      - ["systemctl", "disable", "--now", "systemd-networkd"]
      - ["systemctl", "enable", "--now", "NetworkManager.service"]
      - ["ln", "-s", "/var/lib/snapd/snap", "/snap"]
      - ["sleep", "3"]
      - ["snap", "install", "snapd"]
      - ["sleep", "3"]
      - ["snap", "refresh"]
      - ["snap", "install", "--edge", "core"]
      - ["snap", "refresh"]
      - ["groupmod", "-g", "${ccioGid}", "ccio"]
      - ["cp", "/root/.ssh", "/home/${ministack_UNAME}/.ssh"]
      - ["cp", "/root/.bashrc", "/home/${ministack_UNAME}/.bashrc"]
      - ["chown", "-R", "${ministack_UNAME}:${ministack_UNAME}", "/home/${ministack_UNAME}/.ssh"]
      - ["chown", "-R", "${ministack_UNAME}:${ministack_UNAME}", "/home/${ministack_UNAME}/.bashrc"]
      - ["sed", "-i", "'s/SELINUX=enforcing/SELINUX=permissive/g'", "/etc/selinux/config"]
      - ["snap", "install", "--edge", "lxd"]
      - ["touch", "/root/test2"]
devices:
  eth0:
    name: eth0
    nictype: bridged
    parent: external
    type: nic
  eth1:
    name: eth1
    nictype: bridged
    parent: internal
    type: nic
  eth2:
    name: eth2
    nictype: bridged
    parent: ocp-mini-stack
    type: nic
  root:
    path: /
    pool: default
    type: disk
  ccio-etc:
    path: /etc/ccio
    source: /etc/ccio
    type: disk
  ccio-home:
    path: /home/${ministack_UNAME}/.ccio
    source: /root/.ccio
    type: disk
description: ccio mini-stack fedora cloudctl container profile
name: cloudctl
EOF

# Detect && Purge 'cloudctl' Profile
echo ">   Checking for & Removing Pre-Existing CloudCTL Profile ..."
[[ $(lxc profile show cloudctl 2>&1 1>/dev/null ; echo $?) != 0 ]] || lxc profile delete cloudctl

# Create && Write Profile
lxc profile create cloudctl

echo ">   Loading CloudCTL Cloud Init Data"
lxc profile edit cloudctl < <(cat /tmp/lxd-profile-cloudctl.yaml)

echo ">   Created cloudctl profile"
lxc profile list
