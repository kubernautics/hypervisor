#################################################################################
# System Setup & User Access

sudo -i 
passwd root
mkdir ~/.bak && mv ~/* ~/.bak/

systemctl enable --now sshd

dnf update  -y

sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config

ssh-keygen -f ~/.ssh/id_rsa -N ''
curl -L https://github.com/usrbinkat.keys | tee -a ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys && chown root:root -R ~/.ssh

shutdown -r now

#################################################################################
# Install Base Packates
dnf install -y xz tar git tmux htop grubby iperf3 glances hostname neofetch net-tools vim-enhanced openssh-server

#################################################################################
# Kernel Modules & Argument Setup
echo 'options kvm_intel nested=1' >/etc/modprobe.d/qemu-system-x86.conf
echo 'vfio-pci'                   >/etc/modules-load.d/vfio-pci.conf

sed  -i 's/GRUB_TERMINAL_OUTPUT="console"/GRUB_TERMINAL_OUTPUT="serial"/g'                     /etc/default/grub
echo    'GRUB_SERIAL_COMMAND="serial --speed=115200 --unit=0 --word=8 --parity=no --stop=1"' >>/etc/default/grub

grub2-mkconfig -o /boot/grub2/grub.cfg
grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg

grubby --update-kernel=ALL --remove-args="quiet splash"
grubby --update-kernel=ALL --args="intel_iommu=on iommu=pt kvm-intel.nested=1 kvm_intel.nested=1 net.ifnames=0 biosdevname=0 pci=noaer console=ttyS0,115200n8"

#################################################################################
# Install Libvirt/KVM/QEMU Tools & Utilities
dnf  install -y libvirt qemu-kvm virt-top qemu-kvm qemu-img edk2-ovmf virt-viewer virt-manager virt-install libvirt-client python3-libvirt libguestfs-tools libvirt-daemon-kvm libguestfs-tools-c libvirt-daemon-qemu 

#################################################################################
# Install OpenVSwitch Components
dnf install -y openvswitch network-scripts-openvswitch

#################################################################################
# Install LXD Stack
dnf install -y snapd && snap list
sleep 2; install snapd 
ln -s /var/lib/snapd/snap /snap
snap install lxd

#################################################################################
# Host & Virtual Network Setup
mkdir -p /etc/systemd/network
export external_NIC="eth0"

cat <<EOF >/etc/systemd/network/${external_NIC}.network
[Match]
Name=${external_NIC}
[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
EOF

cat <<EOF >/etc/systemd/network/external.network
[Match]
Name=external
[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
EOF

cat <<EOF >/etc/systemd/network/mgmt0.network 
[Match]
Name=mgmt0
[Link]
#MACAddress=02:49:92:7d:ae:1c
[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
Address=10.0.0.149/24
Gateway=10.0.0.1
DNS=8.8.8.8
DNS=8.8.4.4
EOF

cat <<EOF >/etc/systemd/network/internal.network
[Match]
Name=internal
[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
EOF

cat <<EOF >/etc/systemd/network/mgmt1.network 
[Match]
Name=mgmt1
[Network]
DHCP=no
IPv6AcceptRA=no
LinkLocalAddressing=no
Domains=ministack.dev
Address=10.99.2.12/24
EOF

cat <<EOF >~/external-mgmt0-setup
#!/bin/bash
run_net_setup () {
 systemctl stop    NetworkManager
 systemctl enable --now ovs-vswitchd
 ovs-vsctl add-br external             \
  -- add-port external ${external_NIC} \
  -- add-port external mgmt0           \
  -- set interface mgmt0 type=internal \
  -- set interface mgmt0 mac="$(echo "${HOSTNAME} external mgmt0" | md5sum \
  | sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02\\:\1\\:\2\\:\3\\:\4\\:\5/')"
 ln -fs /usr/lib/systemd/resolv.conf /etc/resolv.conf
 systemctl restart ovs-vswitchd.service
 systemctl enable  --now systemd-networkd.service
 systemctl enable  --now systemd-resolved.service
ovs-clear
}
run_net_setup
EOF

cat <<EOF >~/internal-mgmt1-setup
#!/bin/bash
ovs-vsctl add-br internal \
 -- add-port internal mgmt1 \
 -- set interface mgmt1 type=internal \
 -- set interface mgmt1 mac="$(echo "$HOSTNAME internal mgmt1" | md5sum \
 | sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02\\:\1\\:\2\\:\3\\:\4\\:\5/')"
systemctl restart systemd-networkd.service
ovs-clear
EOF

cat <<EOF >/usr/bin/ovs-clear
#!/bin/bash
run_ovs_clear () {
for i in \$(ovs-vsctl show | awk '/error: /{print \$7}'); do
  ovs-vsctl del-port \$i;
done
clear && ovs-vsctl show
}
run_ovs_clear
EOF

chmod +x /usr/bin/ovs-clear

ln -f /etc/systemd/network/*.network ~
ln -s /usr/lib/systemd/system/ovsdb-server.service /etc/systemd/system/network-online.target.wants/ovdb-server.service
ln -s /usr/lib/systemd/system/ovs-vswitchd.service /etc/systemd/system/network-online.target.wants/ovs-vswitchd.service

systemctl disable NetworkManager

. ~/external-mgmt0-setup
. ~/internal-mgmt1-setup
. ~/openshift-bridge-setup

shutdown -r now

#################################################################################
# Libvirt KVM
systemctl enable --now libvirtd

mkdir ~/.bak 2>/dev/null \
  ; virsh net-dumpxml default | tee ~/.bak/virsh-net-default-bak.xml \
  ; virsh net-destroy default && virsh net-undefine default

cat <<EOF >~/virsh-net-default-on-internal.xml
<network>
  <name>default</name>
  <forward mode='bridge'/>
  <bridge name='internal' />
  <virtualport type='openvswitch'/>
</network>
EOF

cat <<EOF >~/virsh-net-internal-on-internal.xml
<network>
  <name>internal</name>
  <forward mode='bridge'/>
  <bridge name='internal' />
  <virtualport type='openvswitch'/>
</network>
EOF

cat <<EOF >~/virsh-net-external-on-external.xml
<network>
  <name>external</name>
  <forward mode='bridge'/>
  <bridge name='external' />
  <virtualport type='openvswitch'/>
</network>
EOF

for xml in virsh-net-default-on-internal.xml virsh-net-internal-on-internal.xml virsh-net-external-on-external.xml; do virsh net-define ~/${xml}; done

for virshet in external default internal; do virsh net-start ${virshet}; virsh net-autostart ${virshet}; done

virsh net-list --all

#################################################################################
# Init LXD
usermod -aG lxd kmorgan
lxd init

#################################################################################
# OPTIONAL: Disable Desktop GUI Environment (CLI & SSH Console Only)
systemctl set-default multi-user.target
update-alternatives --set editor /usr/bin/vim
echo "kmorgan ALL=(ALL) NOPASSWD:ALL" >/etc/sudoers.d/kmorgan
